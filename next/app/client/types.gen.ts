// This file is auto-generated by @hey-api/openapi-ts

export type Body_login_login_access_token = {
	grant_type?: string | null;
	username: string;
	password: string;
	scope?: string;
	client_id?: string | null;
	client_secret?: string | null;
};

export type HTTPValidationError = {
	detail?: Array<ValidationError>;
};

export type ItemCreate = {
	title: string;
	description?: string | null;
};

export type ItemPublic = {
	title: string;
	description?: string | null;
	id: string;
	owner_id: string;
};

export type ItemsPublic = {
	data: Array<ItemPublic>;
	count: number;
};

export type ItemUpdate = {
	title?: string | null;
	description?: string | null;
};

export type Message = {
	message: string;
};

export type NewPassword = {
	token: string;
	new_password: string;
};

export type PrivateUserCreate = {
	email: string;
	password: string;
	full_name: string;
	is_verified?: boolean;
};

export type Token = {
	access_token: string;
	token_type?: string;
};

export type UpdatePassword = {
	current_password: string;
	new_password: string;
};

export type UserCreate = {
	email: string;
	is_active?: boolean;
	is_superuser?: boolean;
	full_name?: string | null;
	password: string;
};

export type UserPublic = {
	email: string;
	is_active?: boolean;
	is_superuser?: boolean;
	full_name?: string | null;
	id: string;
};

export type UserRegister = {
	email: string;
	password: string;
	full_name?: string | null;
};

export type UsersPublic = {
	data: Array<UserPublic>;
	count: number;
};

export type UserUpdate = {
	email?: string | null;
	is_active?: boolean;
	is_superuser?: boolean;
	full_name?: string | null;
	password?: string | null;
};

export type UserUpdateMe = {
	full_name?: string | null;
	email?: string | null;
};

export type ValidationError = {
	loc: Array<string | number>;
	msg: string;
	type: string;
};

export type ItemsReadItemsData = {
	query?: {
		limit?: number;
		skip?: number;
	};
};

export type ItemsReadItemsResponse = ItemsPublic;

export type ItemsReadItemsError = HTTPValidationError;

export type ItemsCreateItemData = {
	body: ItemCreate;
};

export type ItemsCreateItemResponse = ItemPublic;

export type ItemsCreateItemError = HTTPValidationError;

export type ItemsReadItemData = {
	path: {
		id: string;
	};
};

export type ItemsReadItemResponse = ItemPublic;

export type ItemsReadItemError = HTTPValidationError;

export type ItemsUpdateItemData = {
	body: ItemUpdate;
	path: {
		id: string;
	};
};

export type ItemsUpdateItemResponse = ItemPublic;

export type ItemsUpdateItemError = HTTPValidationError;

export type ItemsDeleteItemData = {
	path: {
		id: string;
	};
};

export type ItemsDeleteItemResponse = Message;

export type ItemsDeleteItemError = HTTPValidationError;

export type LoginLoginAccessTokenData = {
	body: Body_login_login_access_token;
};

export type LoginLoginAccessTokenResponse = Token;

export type LoginLoginAccessTokenError = HTTPValidationError;

export type LoginTestTokenResponse = UserPublic;

export type LoginTestTokenError = unknown;

export type LoginRecoverPasswordData = {
	path: {
		email: string;
	};
};

export type LoginRecoverPasswordResponse = Message;

export type LoginRecoverPasswordError = HTTPValidationError;

export type LoginResetPasswordData = {
	body: NewPassword;
};

export type LoginResetPasswordResponse = Message;

export type LoginResetPasswordError = HTTPValidationError;

export type LoginRecoverPasswordHtmlContentData = {
	path: {
		email: string;
	};
};

export type LoginRecoverPasswordHtmlContentResponse = string;

export type LoginRecoverPasswordHtmlContentError = HTTPValidationError;

export type PrivateCreateUserData = {
	body: PrivateUserCreate;
};

export type PrivateCreateUserResponse = UserPublic;

export type PrivateCreateUserError = HTTPValidationError;

export type UsersReadUsersData = {
	query?: {
		limit?: number;
		skip?: number;
	};
};

export type UsersReadUsersResponse = UsersPublic;

export type UsersReadUsersError = HTTPValidationError;

export type UsersCreateUserData = {
	body: UserCreate;
};

export type UsersCreateUserResponse = UserPublic;

export type UsersCreateUserError = HTTPValidationError;

export type UsersReadUserMeResponse = UserPublic;

export type UsersReadUserMeError = unknown;

export type UsersDeleteUserMeResponse = Message;

export type UsersDeleteUserMeError = unknown;

export type UsersUpdateUserMeData = {
	body: UserUpdateMe;
};

export type UsersUpdateUserMeResponse = UserPublic;

export type UsersUpdateUserMeError = HTTPValidationError;

export type UsersUpdatePasswordMeData = {
	body: UpdatePassword;
};

export type UsersUpdatePasswordMeResponse = Message;

export type UsersUpdatePasswordMeError = HTTPValidationError;

export type UsersRegisterUserData = {
	body: UserRegister;
};

export type UsersRegisterUserResponse = UserPublic;

export type UsersRegisterUserError = HTTPValidationError;

export type UsersReadUserByIdData = {
	path: {
		user_id: string;
	};
};

export type UsersReadUserByIdResponse = UserPublic;

export type UsersReadUserByIdError = HTTPValidationError;

export type UsersUpdateUserData = {
	body: UserUpdate;
	path: {
		user_id: string;
	};
};

export type UsersUpdateUserResponse = UserPublic;

export type UsersUpdateUserError = HTTPValidationError;

export type UsersDeleteUserData = {
	path: {
		user_id: string;
	};
};

export type UsersDeleteUserResponse = Message;

export type UsersDeleteUserError = HTTPValidationError;

export type UtilsTestEmailData = {
	query: {
		email_to: string;
	};
};

export type UtilsTestEmailResponse = Message;

export type UtilsTestEmailError = HTTPValidationError;

export type UtilsHealthCheckResponse = boolean;

export type UtilsHealthCheckError = unknown;
